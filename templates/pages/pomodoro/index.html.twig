{# templates/pages/pomodoro/index.html.twig #}

{% extends 'base.html.twig' %}

{% block title %}Minuteur Pomodoro
{% endblock %}


{% block body %}
	<div class="container text-center">
		<style>
			.icon-container {
				display: flex;
				justify-content: center;
				align-items: center;
				gap: 20px;
				margin-top: 20px;
			}

			.icon-button {
				background: none;
				border: none;
				outline: none;
				cursor: pointer;
				width: 60px;
				height: 60px;
				display: flex;
				align-items: center;
				justify-content: center;
				padding: 10px;
			}

			.icon-button svg {
				width: 40px;
				height: 40px;
				fill: black;
			}

			.icon-button:hover {
				background: none;
				border: none;
				outline: none;
			}
		</style>
		<h1 class="mt-5">Minuteur Pomodoro</h1>
		<div class="my-3" style="font-size: 3rem;">
			<strong>Temps restant :</strong>
			{% set minutes = remainingTime // 60 %}
			{% set seconds = remainingTime % 60 %}
			<span id="timer-display">{{ '%02d'|format(minutes) ~ ':' ~ '%02d'|format(seconds) }}</span>
		</div>
		<div class="my-3">
			<strong>État :</strong>
			<span id="timer-state">{{ isRunning ? 'Le minuteur est en marche' : 'Le minuteur est en pause' }}</span>
		</div>
		<div class="icon-container">
			<button class="icon-button" onclick="startTimer()">
				<svg xmlns="http://www.w3.org/2000/svg" viewbox="0 0 24 24">
					<path d="M8 5v14l11-7z"/>
				</svg>
			</button>

			<button class="icon-button" onclick="pauseTimer()">
				<svg xmlns="http://www.w3.org/2000/svg" viewbox="0 0 24 24">
					<path d="M6 19h4V5H6v14zm8-14v14h4V5h-4z"/>
				</svg>
			</button>

			<button class="icon-button" onclick="resetTimer()">
				<svg xmlns="http://www.w3.org/2000/svg" viewbox="0 0 24 24">
					<path d="M13 3a9 9 0 1 0 8.4 12.6l-1.9-.7A7 7 0 1 1 13 5V9l4.5-4.5L13 0v3z"/>
				</svg>
			</button>
		</div>

		<div class="mt-4">
			<h2>Sélectionner la stratégie Pomodoro</h2>
			<button class="btn btn-primary" onclick="window.location.href='{{ path('pomodoro_strategy', {'duration': 'short'}) }}'">15 minutes</button>
			<button class="btn btn-primary" onclick="window.location.href='{{ path('pomodoro_strategy', {'duration': 'standard'}) }}'">25 minutes</button>
			<button class="btn btn-primary" onclick="window.location.href='{{ path('pomodoro_strategy', {'duration': 'long'}) }}'">45 minutes</button>


		</div>
	</div>

	<script>
		var remainingTime = {{ remainingTime }};
var isRunning = {{ isRunning ? 'true' : 'false' }};
var interval;
var lastTime;

// Fonction pour démarrer le timer
function startTimer() {
if (! isRunning) {
isRunning = true;
lastTime = Date.now();
requestAnimationFrame(updateTimer); // Commence la mise à jour du timer
document.getElementById('timer-state').textContent = "Le minuteur est en marche";
}
}

// Fonction pour mettre en pause le timer
function pauseTimer() {
isRunning = false;
document.getElementById('timer-state').textContent = "Le minuteur est en pause";
}

// Fonction pour réinitialiser le timer
function resetTimer() {
isRunning = false;
remainingTime = {{ remainingTime }};
document.getElementById('timer-state').textContent = "Le minuteur est en pause";
updateTimerDisplay();
}

// Fonction pour mettre à jour le timer
function updateTimer() {
if (isRunning && remainingTime > 0) {
var now = Date.now();
var elapsedTime = (now - lastTime) / 1000; // Temps écoulé en secondes
if (elapsedTime >= 1) { // Met à jour toutes les secondes
remainingTime -= Math.floor(elapsedTime); // Décrémente le temps restant
lastTime = now;
updateTimerDisplay();
}
requestAnimationFrame(updateTimer); // Demande une nouvelle mise à jour à la prochaine frame
}
}

// Fonction pour afficher le timer
function updateTimerDisplay() {
var minutes = Math.floor(remainingTime / 60);
var seconds = remainingTime % 60;
document.getElementById('timer-display').textContent = ('0' + minutes).slice(-2) + ':' + (
'0' + seconds
).slice(-2);
}

// Initialisation du timer à l'état actuel
updateTimerDisplay();
	</script>
{% endblock %}
